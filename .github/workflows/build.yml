name: build
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Get ktlint version
        id: ktlint
        run: |
          # load versions.ktlint from gradle/libs.versions.toml
          V=$(grep -i "ktlint = \"\(.*\)\"" gradle/libs.versions.toml | sed -e "s/ktlint = \"\(.*\)\"/\1/")
          echo "Detected version $V"
          echo "version=$V" >> "$GITHUB_OUTPUT"
      - name: Lint Check
        uses: ScaCap/action-ktlint@master
        with:
          fail_on_error: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ktlint_version: ${{ steps.ktlint.outputs.version }}
          reporter: ${{ (github.event_name == 'pull_request' && 'github-pr-review' ) || 'github-check' }}

  build:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [ check ]
        java: [ 21 ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Run ${{ matrix.task }} task
        run: ./gradlew ${{ matrix.task }} --stacktrace